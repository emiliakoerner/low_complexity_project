HkPolyx$Organism <- factor(HkPolyx$Organism, levels = selected_organisms, labels = organism_labels[selected_organisms])
HkPolyx
# Group and calculate average gene length
average_lengths <- HkPolyx %>%
group_by(Organism, Hk) %>%
summarize(average_genelength = mean(genelength, na.rm = TRUE),
.groups = "drop")
# Print the result
print(average_lengths)
# Summarize counts and mean lengths per Hk status
by_status <- HkPolyx %>%
group_by(Organism, Hk) %>%
summarize(
Count = n(),
Mean_Length = mean(genelength, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = Hk,
values_from = c(Count, Mean_Length),
names_glue = "{.value}_{Hk}"
)
# Add overall mean gene length per organism (ignoring Hk status)
overall_means <- HkPolyx %>%
group_by(Organism) %>%
summarize(Mean_Length_All = mean(genelength, na.rm = TRUE), .groups = "drop")
# Join both tables
final_summary <- left_join(by_status, overall_means, by = "Organism")
# Show as a nice table
knitr::kable(final_summary, digits = 2, caption = "Gene counts and average lengths by organism and Hk status")
# Load necessary libraries
library(tidyverse)
library(readxl)
library(dplyr)
library(conflicted)
conflict_prefer("filter", "dplyr")
# Create a data frame for the UP numbers and organisms
up_to_organism <- tibble(
UP_number = c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640"),
Organism = c("Escherichia coli", "Saccharomyces cerevisiae", "Arabidopsis thaliana", "Caenorhabditis elegans", "Drosophila melanogaster", "Gallus gallus", "Ornithorhynchus anatinus", "Monodelphis domestica", "Cricetulus griseus", "Mus musculus", "Macaca mulatta", "Pongo abelii", "Gorilla gorilla gorilla", "Pan troglodytes", "Homo sapiens")
)
# Display the table using knitr::kable
knitr::kable(up_to_organism, caption = "Mapping of UP Numbers to Organisms")
# Select only the organisms you want to plot
selected_organisms <- c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640")
# Read in data from .tsv files
file_paths <- list.files("./proteomes_hrs_hk", pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),
Count_grouped = as.character(Count_grouped),
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_hrs_hk")
))
HKPolyx <- organism_data %>%
filter(Organism %in% selected_organisms) %>%  # Filter data for selected organisms
droplevels() %>%
mutate(Organism = factor(Organism))
head(HKPolyx)
print(unique(HKPolyx$Organism))
HKPolyx <- HKPolyx %>%
mutate(HK = recode(HK, `0` = "not HK", `1` = "HK"),
HK = as.factor(HK),
HK = factor(HK, levels = rev(levels(HK))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
# Table with all numbers
by_status <- HKPolyx %>%
group_by(Organism, HK) %>%
summarize(
Count = n(),
Mean_Length = mean(Length, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = HK,
values_from = c(Count, Mean_Length),
names_glue = "{.value}_{HK}"
)
overall_means <- HKPolyx %>%
group_by(Organism) %>%
summarize(Mean_Length_All = mean(Length, na.rm = TRUE), .groups = "drop")
final_summary <- left_join(by_status, overall_means, by = "Organism")
knitr::kable(final_summary, digits = 2, caption = "Protein counts and average lengths by organism and HK status")
# organism names
organism_labels <- c(
"UP000000625" = "italic('E. coli')",
"UP000002311" = "italic('S. cerevisiae')",
"UP000001940" = "italic('C. elegans')",
"UP000000803" = "italic('D. melanogaster')",
"UP000000589" = "italic('M. musculus')",
"UP000005640" = "italic('Homo sapiens')",
"UP000006548" = "italic('A. thaliana')",
"UP000006718" = "italic('Macaca mulatta (28.8 MYA)')",
"UP000001595" = "italic('Pongo abelii (15.2 MYA)')",
"UP000001519" = "italic('Gorilla gorilla gorilla (8.6 MYA)')",
"UP000002277" = "italic('Pan troglodytes (6.4 MYA)')",
"UP000000539" = "italic('Gallus gallus (319 MYA)')",
"UP000002279" = "italic('O. anatinus')",      # (180 MYA)
"UP000002280" = "italic('M. domestica')",     #  (160 MYA)
"UP000001075" = "italic('C. griseus (87 MYA)')"
)
HKPolyx <- HKPolyx %>%
mutate(HK = recode(HK, `0` = "not HK", `1` = "HK"),
HK = as.factor(HK),
HK = factor(HK, levels = rev(levels(HK))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
# Table with all numbers
by_status <- HKPolyx %>%
group_by(Organism, HK) %>%
summarize(
Count = n(),
Mean_Length = mean(Length, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = HK,
values_from = c(Count, Mean_Length),
names_glue = "{.value}_{HK}"
)
overall_means <- HKPolyx %>%
group_by(Organism) %>%
summarize(Mean_Length_All = mean(Length, na.rm = TRUE), .groups = "drop")
final_summary <- left_join(by_status, overall_means, by = "Organism")
knitr::kable(final_summary, digits = 2, caption = "Protein counts and average lengths by organism and HK status")
# Load necessary libraries
library(tidyverse)
library(readxl)
library(dplyr)
library(conflicted)
conflict_prefer("filter", "dplyr")
# Create a data frame for the UP numbers and organisms
up_to_organism <- tibble(
UP_number = c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640"),
Organism = c("Escherichia coli", "Saccharomyces cerevisiae", "Arabidopsis thaliana", "Caenorhabditis elegans", "Drosophila melanogaster", "Gallus gallus", "Ornithorhynchus anatinus", "Monodelphis domestica", "Cricetulus griseus", "Mus musculus", "Macaca mulatta", "Pongo abelii", "Gorilla gorilla gorilla", "Pan troglodytes", "Homo sapiens")
)
# Display the table using knitr::kable
knitr::kable(up_to_organism, caption = "Mapping of UP Numbers to Organisms")
# Select only the organisms you want to plot
selected_organisms <- c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640")
# Read in data from .tsv files
file_paths <- list.files("./proteomes_hrs_hk", pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(
Polyx_lengths = as.character(Polyx_lengths),
Count_grouped = as.character(Count_grouped),
Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_hrs_hk")
))
HKPolyx <- organism_data %>%
filter(Organism %in% selected_organisms) %>%  # Filter data for selected organisms
droplevels() %>%
mutate(Organism = factor(Organism))
head(HKPolyx)
print(unique(HKPolyx$Organism))
HKPolyx <- HKPolyx %>%
mutate(HK = recode(HK, `0` = "not HK", `1` = "HK"),
HK = as.factor(HK),
HK = factor(HK, levels = rev(levels(HK))),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1")))
# Table with all numbers
by_status <- HKPolyx %>%
group_by(Organism, HK) %>%
summarize(
Count = n(),
Mean_Length = mean(Length, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = HK,
values_from = c(Count, Mean_Length),
names_glue = "{.value}_{HK}"
)
overall_means <- HKPolyx %>%
group_by(Organism) %>%
summarize(Mean_Length_All = mean(Length, na.rm = TRUE), .groups = "drop")
final_summary <- left_join(by_status, overall_means, by = "Organism")
knitr::kable(final_summary, digits = 2, caption = "Protein counts and average lengths by organism and HK status")
HKPolyx <- HKPolyx %>%
mutate(
Count_grouped = case_when(
Polyx_count == "0" ~ "0",
Polyx_count == "1" ~ "1",
as.numeric(Polyx_count) > 1 ~ ">1",  # for values greater than 2
TRUE ~ NA_character_  # handle any unexpected values
),
Count_grouped = factor(Count_grouped, levels = c("0", "1", ">1"))
)
# organism names
organism_labels <- c(
"UP000000625" = "italic('E. coli')",
"UP000002311" = "italic('S. cerevisiae')",
"UP000001940" = "italic('C. elegans')",
"UP000000803" = "italic('D. melanogaster')",
"UP000000589" = "italic('M. musculus')",
"UP000005640" = "italic('Homo sapiens')",
"UP000006548" = "italic('A. thaliana')",
"UP000006718" = "italic('Macaca mulatta (28.8 MYA)')",
"UP000001595" = "italic('Pongo abelii (15.2 MYA)')",
"UP000001519" = "italic('Gorilla gorilla gorilla (8.6 MYA)')",
"UP000002277" = "italic('Pan troglodytes (6.4 MYA)')",
"UP000000539" = "italic('Gallus gallus (319 MYA)')",
"UP000002279" = "italic('O. anatinus')",      # (180 MYA)
"UP000002280" = "italic('M. domestica')",     #  (160 MYA)
"UP000001075" = "italic('C. griseus (87 MYA)')"
)
# Convert Organism column AFTER filtering
HKPolyx$Organism <- factor(HKPolyx$Organism, levels = selected_organisms, labels = organism_labels[selected_organisms])
# manual significance values
significance_values_HK <- c(
"UP000000625" = "***",
"UP000002311" = "***",
"UP000001940" = "***",
"UP000000803" = "***",
"UP000000589" = "***",
"UP000006548" = "***",
"UP000005640" = "***",
"UP000006718" = "***",
"UP000001595" = "*",
"UP000001519" = "ns",
"UP000002277" = "ns",
"UP000000539" = "ns",
"UP000002279" = "***",
"UP000002280" = "***",
"UP000001075" = "***"
)
significance_HK_filtered <- tibble(
Organism = factor(
selected_organisms,
levels = selected_organisms,
labels = organism_labels[selected_organisms]
),
x = rep(1.5, length(selected_organisms)),
y = rep(850, length(selected_organisms)),
label = significance_values_HK[selected_organisms]
)
# final plot
HKPolyx %>%
ggplot(aes(x = HK, y = Length, fill = HK)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(150, 850)) +
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 4, labeller = label_parsed, drop = TRUE) +
theme_minimal() +
geom_text(
data = HKPolyx %>%
group_by(HK, Organism) %>%
summarize(median_length = median(Length),
Count = n()),
aes(x = HK,
y = median_length - 50,  # Place the text at the median
label = Count),
inherit.aes = FALSE,
size = 3, color = "black") +
geom_text(data = significance_HK_filtered, aes(x = x, y = y, label = label), size = 5, color = "black", inherit.aes = FALSE)
# Manual significance levels
significance_0_1 <- c(
"UP000000625" = "ns",
"UP000002311" = "***",
"UP000001940" = "***",
"UP000000803" = "***",
"UP000000589" = "***",
"UP000006548" = "***",
"UP000005640" = "***",
"UP000002277" = "***",
"UP000006718" = "***",
"UP000001519" = "***",
"UP000001595" = "***",
"UP000000539" = "***",
"UP000002279" = "***",
"UP000002280" = "***",
"UP000001075" = "***"
)
significance_1_2 <- c(
"UP000002311" = "***",
"UP000001940" = "***",
"UP000000803" = "***",
"UP000000589" = "***",
"UP000006548" = "***",
"UP000005640" = "***",
"UP000002277" = "***",
"UP000006718" = "***",
"UP000001519" = "***",
"UP000001595" = "***",
"UP000000539" = "***",
"UP000002279" = "***",
"UP000002280" = "***",
"UP000001075" = "ns"
)
# Create the significance label table
significance_HR_filtered <- tibble()
for (org in selected_organisms) {
org_label <- factor(org, levels = selected_organisms, labels = organism_labels[selected_organisms])
# 0 vs 1 (include all)
significance_HR_filtered <- bind_rows(significance_HR_filtered,
tibble(
Organism = org_label,
x = 1.5,
y = 1500,
label = significance_0_1[org]
)
)
# 1 vs 2 (exclude E. coli)
if (!is.null(significance_1_2[org])) {
significance_HR_filtered <- bind_rows(significance_HR_filtered,
tibble(
Organism = org_label,
x = 2.5,
y = 1500,
label = significance_1_2[org]
)
)
}
}
# Final plot
HKPolyx %>%
ggplot(aes(x = Count_grouped, y = Length, fill = Count_grouped)) +
geom_boxplot(size = 1.2, notch = TRUE) +
xlab("Number of Homorepeats") +
ylab("Protein length (aa)") +
coord_cartesian(ylim = c(100, 1600)) +
scale_fill_manual(name = "HR count", values = c("#4d79ff", "#ccffee", "#ffffff")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 3, labeller = label_parsed, drop = TRUE) +
theme_minimal() +
geom_text(data = significance_HR_filtered,
aes(x = x, y = y, label = label),
size = 4, color = "black", inherit.aes = FALSE)
# Wilcoxon Rank-Sum Test for Plot 1: Protein Length by Housekeeping Status
plot1_stats <- HKPolyx %>%
group_by(Organism) %>%
summarise(
p_value = wilcox.test(Length ~ HK)$p.value
) %>%
mutate(significance = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*",
TRUE ~ "ns"
))
print(plot1_stats)
# Apply Wilcoxon test for each organism for 0 vs. 1
plot2_0_1 <- HKPolyx %>%
group_by(Organism) %>%
filter(Count_grouped %in% c("0", "1")) %>%
do({
# Perform the Wilcoxon test for the current organism
test_result <- wilcox.test(Length ~ Count_grouped, data = ., correct = TRUE)
# Return the p-value for the test
tibble(p_value_0_1 = test_result$p.value)
})
# View the results
print(plot2_0_1)
# Apply Wilcoxon test for each organism for 1 vs. >1
plot2_1_2 <- HKPolyx %>%
filter(Organism != "italic('E. coli')") %>%
group_by(Organism) %>%
filter(Count_grouped %in% c("1", ">1")) %>%
do({
# Perform the Wilcoxon test for the current organism
test_result <- wilcox.test(Length ~ Count_grouped, data = ., correct = TRUE)
# Return the p-value for the test
tibble(p_value_1_2 = test_result$p.value)
})
print(plot2_1_2)
# Load necessary libraries
library(tidyverse)
library(readxl)
library(dplyr)
library(conflicted)
conflict_prefer("filter", "dplyr")
# Create a data frame for the UP numbers and organisms
up_to_organism <- tibble(
UP_number = c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640"),
Organism = c("Escherichia coli", "Saccharomyces cerevisiae", "Arabidopsis thaliana", "Caenorhabditis elegans", "Drosophila melanogaster", "Gallus gallus", "Ornithorhynchus anatinus", "Monodelphis domestica", "Cricetulus griseus", "Mus musculus", "Macaca mulatta", "Pongo abelii", "Gorilla gorilla gorilla", "Pan troglodytes", "Homo sapiens")
)
# Display the table using knitr::kable
knitr::kable(up_to_organism, caption = "Mapping of UP Numbers to Organisms")
# Select only the organisms you want to plot
selected_organisms <- c("UP000000625", "UP000002311", "UP000006548", "UP000001940", "UP000000803", "UP000000539", "UP000002279", "UP000002280", "UP000001075", "UP000000589", "UP000006718", "UP000001595", "UP000001519", "UP000002277", "UP000005640")
# Read in data from .tsv files
file_paths <- list.files("D:/Emilia/low_complexity_project/analysis/genelengthoutput",
pattern = "*.tsv", full.names = TRUE)
organism_data <- file_paths %>%
map_dfr(~read_tsv(.x, show_col_types = FALSE) %>%
mutate(Organism = str_remove(tools::file_path_sans_ext(basename(.x)), "_length")))
HkPolyx <- organism_data %>%
filter(Organism %in% selected_organisms) %>%  # Filter data for selected organisms
droplevels() %>%
filter(genelength != "-") %>%
mutate(Organism = factor(Organism)) %>%
mutate(Hk = recode(Hk, `0` = "not Hk", `1` = "Hk"),
Hk = as.factor(Hk),
Hk = factor(Hk, levels = rev(levels(Hk))),
genelength = as.numeric(genelength)) %>%
filter(!is.na(genelength))
print(unique(HkPolyx$Organism))
# organism names
organism_labels <- c(
"UP000000625" = "italic('E. coli')",
"UP000002311" = "italic('S. cerevisiae')",
"UP000001940" = "italic('C. elegans')",
"UP000000803" = "italic('D. melanogaster')",
"UP000000589" = "italic('M. musculus')",
"UP000005640" = "italic('Homo sapiens')",
"UP000006548" = "italic('A. thaliana')",
"UP000006718" = "italic('Macaca mulatta (28.8 MYA)')",
"UP000001595" = "italic('Pongo abelii (15.2 MYA)')",
"UP000001519" = "italic('Gorilla gorilla gorilla (8.6 MYA)')",
"UP000002277" = "italic('Pan troglodytes (6.4 MYA)')",
"UP000000539" = "italic('Gallus gallus (319 MYA)')",
"UP000002279" = "italic('O. anatinus')",      # (180 MYA)
"UP000002280" = "italic('M. domestica')",     #  (160 MYA)
"UP000001075" = "italic('C. griseus (87 MYA)')"
)
# Convert Organism column AFTER filtering
HkPolyx$Organism <- factor(HkPolyx$Organism, levels = selected_organisms, labels = organism_labels[selected_organisms])
HkPolyx
# Group and calculate average gene length
average_lengths <- HkPolyx %>%
group_by(Organism, Hk) %>%
summarize(average_genelength = mean(genelength, na.rm = TRUE),
.groups = "drop")
# Print the result
print(average_lengths)
# Summarize counts and mean lengths per Hk status
by_status <- HkPolyx %>%
group_by(Organism, Hk) %>%
summarize(
Count = n(),
Mean_Length = mean(genelength, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = Hk,
values_from = c(Count, Mean_Length),
names_glue = "{.value}_{Hk}"
)
# Add overall mean gene length per organism (ignoring Hk status)
overall_means <- HkPolyx %>%
group_by(Organism) %>%
summarize(Mean_Length_All = mean(genelength, na.rm = TRUE), .groups = "drop")
# Join both tables
final_summary <- left_join(by_status, overall_means, by = "Organism")
# Show as a nice table
knitr::kable(final_summary, digits = 2, caption = "Gene counts and average lengths by organism and Hk status")
# manual significance values
significance_values <- c(
"UP000000625" = "***",
"UP000006548" = "***",
"UP000002311" = "***",
"UP000001940" = "***",
"UP000000803" = "***",
"UP000000589" = "***",
"UP000005640" = "***",
"UP000006718" = "***",
"UP000001595" = "***",
"UP000001519" = "**",
"UP000002277" = "***",
"UP000000539" = "ns",
"UP000002279" = "***",
"UP000002280" = "***",
"UP000001075" = "***"
)
significance_filtered <- tibble(
Organism = factor(
selected_organisms,
levels = selected_organisms,
labels = organism_labels[selected_organisms]
),
x = rep(1.5, length(selected_organisms)),
y = rep(80000, length(selected_organisms)),
label = significance_values[selected_organisms]
)
# Boxplot visualization with human-readable names
HkPolyx %>%
ggplot(aes(x = Hk, y = genelength, fill = Hk)) +
geom_boxplot(size = 1.2, notch = TRUE) +
ylab("Gene length (bp)") +
coord_cartesian(ylim = c(0, 5000)) +                   # Adjust limits depending on organisms gene length.
scale_fill_manual(values = c("#ffc8d2", "#ccffee")) +
stat_summary(fun = "mean", geom = "point", shape = 21, size = 4, color = "black", fill = "white") +
facet_wrap(~Organism, ncol = 2, labeller = label_parsed) +
theme_minimal() +
geom_text(
data = HkPolyx %>%
group_by(Hk, Organism) %>%
summarize(median_length = median(genelength, na.rm = TRUE),
Count = n(), .groups = "drop"),
aes(x = Hk,
y = median_length - 5000,  # Adjust position as needed
label = Count),
inherit.aes = FALSE,
size = 3, color = "black") +
geom_text(data = significance_filtered, aes(x = x, y = y, label = label), size = 5, color = "black", inherit.aes = FALSE)
# E coli, yeast and arabidopsis: very short genes (< 3000)
# C elegans and D melanogaster: short genes (< 7000)
# All mammals: Long genes (40.000 - 80.000)
# Wilcoxon Rank-Sum Test for significance
plot1_stats <- HkPolyx %>%
group_by(Organism) %>%
summarise(
p_value = wilcox.test(genelength ~ Hk)$p.value
) %>%
mutate(significance = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*",
TRUE ~ "ns"
))
print(plot1_stats)
